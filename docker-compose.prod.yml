version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: phoenix_db_prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-phoenix}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-phoenix}
      POSTGRES_DB: ${POSTGRES_DB:-phoenix}
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-phoenix}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - phoenix_net

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    image: phoenix_backend:prod
    container_name: phoenix_backend_prod
    restart: unless-stopped
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-phoenix}:${POSTGRES_PASSWORD:-phoenix}@db:5432/${POSTGRES_DB:-phoenix}}
      DATA_DIRECTORY: /app/data
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend_data:/app/data_phoenix
    networks:
      - phoenix_net

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
      args:
        VITE_API_BASE: ${VITE_API_BASE:-/api/v1}
    image: phoenix_frontend:prod
    container_name: phoenix_frontend_prod
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    networks:
      - phoenix_net

networks:
  phoenix_net:
    driver: bridge
